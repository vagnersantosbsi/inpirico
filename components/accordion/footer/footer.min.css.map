{"version":3,"sources":["webpack://./src/components/footer/_footer.scss","webpack://./src/partial/scss/mixins/_states.scss","webpack://./node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAEA,WCuDE,sCAAA,CACA,4CAAA,CACA,8CAAA,CACA,mCAAA,CACA,qCAAA,CACA,wCAAA,CACA,qCAAA,CACA,kCAAA,CD3DA,yCAAA,CACA,+BAAA,CACA,aAMF,CE+CI,yBFlDA,sCACE,YAAA,CACA,mBAMJ,CACF,CAHE,iBACE,yDAKJ,CAJI,qBACE,eAAA,CACA,eAMN,CADI,wBACE,eAAA,CACA,eAGN,CACE,2BACE,QACJ,CAEE,uBACE,mCAAJ,CAGE,yCAEE,4CAAA,CACA,sCAAA,CACA,qCAAA,CACA,2CAAA,CACA,oCAAA,CACA,8CAAA,CACA,oCAFJ,CAGI,2DACE,2CAAA,CACA,2CADN,CAGQ,sLAEE,uBAAV,CAKI,iEACE,oCAHN,CAOE,oBACE,gDAAA,CACA,6CAAA,CACA,2CAAA,CACA,kBAAA,CACA,YALJ,CCnDI,yCACE,qHDqDN,CChDI,0CACE,yHDkDN,CACI,2BACE,8BACN,CACI,2BACE,wBACN,CACI,6BACE,MACN,CAII,+BACE,YAAA,CACA,cAFN,CEvBI,yBF4BM,4DACE,YAAA,CACA,mBAFV,CAIQ,iDACE,MAFV,CAMM,wCACE,qBAAA,CACA,0BAJR,CACF,CAMM,uCACE,UAJR,CAUM,yFAEE,UARR,CASQ,2GACE,2BAAA,CACA,oBAAA,CACA,mBAAA,CACA,gBAAA,CACA,eAAA,CACA,WAAA,CACA,eAAA,CACA,iCAAA,CACA,sBAAA,CACA,mCANV,CASM,iFAEE,WAAA,CACA,SAPR,CEhDI,4BFoDE,iFAKI,yBAAA,CACA,cAJR,CAOU,gRACE,iDAAZ,CACF","file":"footer.min.css","sourcesContent":["@import \"../../partial/scss/base\";\n\n.#{$prefix}footer {\n  --text-color: var(--color-secondary-01);\n  @include dark-mode;\n  background: v(color-primary-darken-02);\n  color: v(color-secondary-01);\n  display: block;\n\n  @include media-breakpoint-up(md) {\n    .#{$prefix}list .#{$prefix}item .support {\n      display: none;\n      pointer-events: none;\n    }\n  }\n\n  .logo {\n    padding: v(spacing-scale-6x) 0 v(spacing-scale-4x);\n    img {\n      max-height: 48px;\n      max-width: 180px;\n    }\n  }\n\n  .assigns {\n    img {\n      max-height: 46px;\n      max-width: 180px;\n    }\n  }\n\n  .social-network {\n    border: 0;\n  }\n\n  .#{$prefix}divider {\n    --divider-color: var(--divider-dark);\n  }\n\n  &[inverted],\n  &.inverted {\n    --interactive-rgb: var(--rgb-primary-default);\n    --hover: var(--surface-opacity-xs, 0.16);\n    --focus-color: var(--color-support-03);\n    --text-color: var(--color-primary-darken-02);\n    background: v(color-secondary-01);\n    border-top: 1px solid v(color-secondary-04);\n    color: v(color-primary-darken-02);\n    .#{$prefix}item {\n      --item-background: var(--color-secondary-01);\n      --item-color: var(--color-primary-darken-02);\n      &.header {\n        .content,\n        .support {\n          color: var(--item-color);\n        }\n      }\n    }\n\n    .#{$prefix}divider {\n      --divider-color: var(--divider-light);\n    }\n  }\n\n  .#{$prefix}item {\n    --item-background: var(--color-primary-darken-02);\n    --item-header-color: var(--color-secondary-01);\n    --item-color: var(--color-primary-pastel-01);\n    align-items: center;\n    display: flex;\n    @include hover;\n    &.header {\n      color: var(--item-header-color);\n    }\n    &.active {\n      background: transparent;\n    }\n    .content {\n      flex: 1;\n    }\n  }\n\n  .#{$prefix}list {\n    &.horizontal {\n      display: flex;\n      flex-wrap: wrap;\n      @include media-breakpoint-up(md) {\n        .#{$prefix}item {\n          .support:last-child {\n            display: none;\n            pointer-events: none;\n          }\n          .content {\n            flex: 1;\n          }\n        }\n        // evita collapse no breakpoint\n        .#{$prefix}list {\n          background-image: none;\n          max-height: 200em !important;\n        }\n      }\n      .header {\n        width: 100%;\n      }\n      //  Para ser compatível com outros navegadores no\n      //  uso máximo de 2 linhas, foram adicionados os\n      //  comandos line-height e max-height.\n\n      .#{$prefix}item,\n      .#{$prefix}list .#{$prefix}item {\n        height: 4em;\n        .content {\n          -webkit-box-orient: vertical;\n          -webkit-line-clamp: 2;\n          display: -webkit-box;\n          line-height: 16px;\n          max-height: 32px;\n          height: auto;\n          overflow: hidden;\n          padding: 0 v(spacing-scale-2x);\n          text-overflow: ellipsis;\n          font-weight: var(--font-weight-bold);\n        }\n      }\n      .col,\n      [class*=\"col-\"] {\n        flex-grow: 0;\n        padding: 0;\n        @include media-breakpoint-down(sm) {\n          flex-basis: 100% !important;\n          max-width: 100%;\n          .#{$prefix}item.header.active {\n            border-bottom: 1px solid var(--color-secondary-04);\n            + .#{$prefix}list {\n              border-bottom: 1px solid var(--color-secondary-04);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Hover\n@mixin hover {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(\n        rgba(var(--interactive-rgb), var(--hover)),\n        rgba(var(--interactive-rgb), var(--hover))\n      );\n    }\n    &:active {\n      background-image: linear-gradient(\n        rgba(var(--interactive-rgb), var(--pressed)),\n        rgba(var(--interactive-rgb), var(--pressed))\n      );\n    }\n  }\n}\n\n// Focus\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus-color);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n@mixin focus-shadow {\n  border-color: var(--focus-color);\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus-color);\n  outline: none;\n}\n\n// Ativo\n@mixin active {\n  background: var(--active);\n  color: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n  --text-color: var(--color-secondary-01);\n  --interactive: var(--color-primary-pastel-01);\n  --interactive-rgb: var(--rgb-primary-pastel-01);\n  --visited: var(--color-secondary-04);\n  --hover: var(--surface-opacity-sm, 0.3);\n  --pressed: var(--surface-opacity-lg, 0.65);\n  --focus-color: var(--color-support-10);\n  --active: var(--color-secondary-01);\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}