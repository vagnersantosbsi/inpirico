{"version":3,"sources":["webpack:///./src/components/menu/_menu.scss","webpack:///./src/partial/scss/mixins/_icons.scss","webpack:///./src/partial/scss/mixins/_states.scss","webpack:///./node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAuZA;EAtYE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA8EA;EAqEA;AAhKF;AAwBE;EACE;AAtBJ;AAwBE;EACE;EACA;EACA;EACA;EACA;AAtBJ;AAwBE;EACE;EACA;EACA;EACA;EACA;EACA;AAtBJ;AA2BI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AAzBN;AA2BI;EACE;EACA;AAzBN;AA2BI;EACE;AAzBN;AAoCE;EACE;EACA;EACA;EACA;AAlCJ;AAmCI;EACE;EACA;EACA;AAjCN;AAkCM;EACE;AAhCR;AA4CE;EACE;EACA;AA1CJ;AA6CI;;EAEE;EACA;AA3CN;AA6CI;EACE;AA3CN;AAiDU;EACE;AA/CZ;AAqDQ;EACE;AAnDV;AAoDU;EACE;AAlDZ;AA0DM;EACE;AAxDR;AA2DQ;EACE;AAzDV;AAgEM;EACE;EACA;AA9DR;AAkEU;EACE;AAhEZ;AC5FE;;;;;;;EDgKY;AA3Dd;AA+DQ;EACE;AA7DV;AA6EE;EACE;AA3EJ;AA4EI;EACE;EACA;EACA;EACA;EACA;EACA;AA1EN;AA4EI;EACE;EACA;EACA;AA1EN;AA2EM;EACE;AAzER;AA0EQ;EACE;AAxEV;AExHI;EACE;AF0HN;AErHI;EACE;AFuHN;AAuEI;EACE;EACA;AArEN;AAsEM;EACE;AApER;AAuEI;EACE;EACA;AArEN;AAiFE;EACE;EACA;EACA;EACA;AA/EJ;AAgFI;EACE;AA9EN;AAgFI;EACE;AA9EN;AAqFI;EACE;EACA;AAnFN;AAsFM;EACE;EACA;EACA;EACA;EACA;AApFR;AAqFQ;EACE;AAnFV;AAqFQ;EACE;AAnFV;AC5KE;;;;;;;EDiQU;AA5EZ;AAgFM;EACE;AA9ER;AAgFM;EACE;AA9ER;AAuFM;EACE;AArFR;AAoFM;EACE;AAlFR;AAiFM;EACE;AA/ER;AAwFI;;EAEE;AAtFN;AGnJI;EHgPE;IACE;EA1FN;EA4FI;IACE;EA1FN;EA+FM;IACE;EA7FR;AACF;AAsGI;EACE;EACA;EACA;EACA;EACA;AApGN;AAqGM;EACE;AAnGR;AAsGI;EACE;EACA;EACA;AApGN;AAsGI;EACE;AApGN;AAsGI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AApGN;AAqGM;EACE;EACA;AAnGR;ACpPE;;;;;;;EDyVQ;AA5FV;AA+FM;EACE;AA7FR;AG3MI;EHgTE;IACE;EAlGN;EAoGI;IACE;EAlGN;EAoGI;IACE;EAlGN;AACF;AA2GI;EACE;AAzGN;AA6GI;EEhYF;EACA;AFsRF;AEpRE;EACE;AFsRJ;AA+GM;EACE;EACA;EACA;AA7GR;AEpRI;EACE;AFsRN;AEjRI;EACE;AFmRN,C","file":"components/menu/menu.css","sourcesContent":["@import \"../../partial/scss/base\";\n\n@mixin menu {\n  @include menu-tokens;\n  @include menu-base;\n  @include menu-header;\n  @include menu-body;\n  @include menu-footer;\n  @include menu-items;\n  @include menu-side-menu;\n  @include menu-items-sizes;\n  @include menu-push;\n  @include menu-auxiliar;\n  @include menu-states;\n}\n\n@mixin menu-tokens {\n  --menu-zindex: 10;\n  --menu-scrim: rgba(0, 0, 0, 0.4);\n  --menu-background: var(--color-secondary-01);\n  --menu-background-submenu: var(--color-secondary-02);\n  --menu-logo: 40px;\n  --menu-title: var(--color-secondary-08);\n  --menu-shadow: 3px 0 3px rgba(0, 0, 0, 0.16);\n  --menu-divider: var(--color-secondary-04);\n  --menu-item-background: transparent;\n  --menu-item-color: var(--interactive);\n  --menu-item-padding: var(--menu-item-medium);\n  --menu-item-small: var(--spacing-scale-base);\n  --menu-item-medium: var(--spacing-scale-2x);\n  --menu-item-large: var(--spacing-scale-3x);\n}\n\n@mixin menu-base {\n  // A base é aplicado no seguinte html:\n  // <div class=\"br-menu\">\n  //   <div class=\"menu-trigger\">\n  //   <div class=\"menu-container\">\n  //     <div class=\"menu-scrim\">\n  //     <div class=\"menu-panel\">\n\n  .menu-container {\n    display: none;\n  }\n  .menu-scrim {\n    background: var(--menu-scrim);\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n  }\n  .menu-panel {\n    --focus-offset: calc(var(--spacing-scale-half) * -1);\n    background: var(--menu-background);\n    box-shadow: var(--menu-shadow);\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n  }\n\n  // Menu ativo\n  &.active {\n    .menu-container {\n      display: block;\n      position: fixed;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      z-index: var(--menu-zindex);\n    }\n    .menu-panel {\n      position: relative;\n      z-index: calc(var(--menu-zindex) + 1);\n    }\n    .menu-scrim {\n      position: absolute;\n    }\n  }\n}\n\n@mixin menu-header {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-header\">\n  //   <div class=\"menu-close\">\n  //   <div class=\"menu-title\">\n\n  .menu-header {\n    border-bottom: 1px solid var(--menu-divider);\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-scale-base) var(--spacing-scale-base);\n    .menu-title {\n      margin-left: var(--spacing-scale-base);\n      flex: 1;\n      font-size: var(--menu-title);\n      img {\n        max-height: var(--menu-logo);\n      }\n    }\n  }\n}\n\n@mixin menu-body {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-body\">\n  //   <div class=\"folder\">\n\n  /* stylelint-disable no-descending-specificity */\n  .menu-body {\n    overflow-y: auto;\n    flex: 1;\n\n    // Resetar estilos\n    ul,\n    li {\n      margin: 0;\n      padding: 0;\n    }\n    ul {\n      list-style: none;\n    }\n    .menu-folder {\n      // Aplica separador entre pastas\n      > ul {\n        > li:last-child {\n          > .menu-item {\n            border-bottom: 1px solid var(--menu-divider);\n          }\n        }\n      }\n      // Cor de fundo para nível 2\n      > .menu-item {\n        & + ul {\n          background: var(--menu-background-submenu);\n          .menu-item {\n            padding-left: var(--spacing-scale-5x);\n          }\n        }\n      }\n    }\n\n    // Aplica separador no menu dropdown de primeiro nível\n    .drop-menu {\n      > .menu-item {\n        border-bottom: 1px solid var(--menu-divider);\n      }\n      &.active {\n        > .menu-item {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    // Estilo padrão para menu dropdown e side menu\n    .drop-menu {\n      > ul {\n        background: var(--menu-background-submenu);\n        display: none;\n      }\n      &.active {\n        > .menu-item {\n          &:not(:hover) {\n            --menu-item-background: var(--menu-background);\n          }\n          .support {\n            @include icon {\n              transform: rotate(180deg);\n            }\n          }\n        }\n        > ul {\n          display: block;\n        }\n      }\n    }\n  }\n  /* stylelint-enable no-descending-specificity */\n}\n\n@mixin menu-footer {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-footer\">\n  //   <div class=\"menu-logos\">\n  //   <div class=\"menu-links\">\n  //   <div class=\"menu-social\">\n  //   <div class=\"menu-info\">\n\n  .menu-footer {\n    border-top: 1px solid var(--menu-divider);\n    .menu-logos {\n      border-bottom: 1px solid var(--menu-divider);\n      padding: var(--spacing-scale-base) var(--spacing-scale-5x);\n      display: grid;\n      grid-template-columns: 1fr 1fr 1fr;\n      column-gap: var(--spacing-scale-2x);\n      row-gap: var(--spacing-scale-2x);\n    }\n    .menu-links {\n      --focus-offset: var(--spacing-scale-half);\n      border-bottom: 1px solid var(--menu-divider);\n      padding: var(--spacing-scale-2x) var(--spacing-scale-5x);\n      a {\n        display: block;\n        &:not(:last-child) {\n          margin-bottom: var(--spacing-scale-2x);\n        }\n        @include hover;\n      }\n    }\n    .menu-social {\n      border-bottom: 1px solid var(--menu-divider);\n      padding: var(--spacing-scale-base) var(--spacing-scale-5x);\n      .sharegroup {\n        display: flex;\n      }\n    }\n    .menu-info {\n      border-bottom: 1px solid var(--menu-divider);\n      padding: var(--spacing-scale-2x);\n    }\n  }\n}\n\n@mixin menu-items {\n  // O header é aplicado no seguinte html:\n  // <div class=\"menu-item\">\n  //   <div class=\"icon\">\n  //   <div class=\"content\">\n  //   <div class=\"support\">\n\n  .menu-item {\n    background: var(--menu-item-background);\n    color: var(--menu-item-color);\n    display: flex;\n    padding: var(--menu-item-padding) var(--spacing-scale-2x);\n    .icon {\n      margin-right: var(--spacing-scale-2x);\n    }\n    .content {\n      flex: 1;\n    }\n  }\n}\n\n@mixin menu-side-menu {\n  .side-menu {\n    > ul {\n      background: var(--menu-background-submenu);\n      display: none;\n    }\n    &.active {\n      > .menu-item {\n        --interactive-rgb: var(--rgb-primary-darken-01);\n        --menu-item-color: var(--active);\n        --menu-item-background: var(--menu-background);\n        font-weight: var(--font-weight-semi-bold);\n        flex-direction: row-reverse;\n        .icon {\n          margin-right: 0;\n        }\n        .support {\n          margin-right: var(--spacing-scale-2x);\n          @include icon {\n            transform: rotate(180deg);\n          }\n        }\n      }\n      > ul {\n        display: block;\n      }\n      .menu-item {\n        padding-left: var(--spacing-scale-2x) !important;\n      }\n    }\n  }\n}\n\n@mixin menu-items-sizes {\n  @each $size in \"small\", \"medium\", \"large\" {\n    &.#{$size} {\n      .menu-item {\n        --menu-item-padding: var(--menu-item-#{$size});\n      }\n    }\n  }\n}\n\n@mixin menu-push {\n  // Mobile First\n  &.push {\n    .menu-trigger,\n    .menu-scrim {\n      display: none;\n    }\n  }\n\n  // Tablet\n  @include media-breakpoint-up(sm) {\n    &.push {\n      .menu-header {\n        display: none;\n      }\n      .menu-panel {\n        height: auto;\n      }\n\n      // Menu ativo\n      &.active {\n        .menu-container {\n          position: static;\n        }\n      }\n    }\n  }\n}\n\n@mixin menu-auxiliar {\n  // Mobile First\n  &.auxiliary {\n    .menu-trigger {\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      z-index: calc(var(--menu-zindex) - 1);\n      .#{$prefix}button {\n        --button-radius: 0;\n      }\n    }\n    .menu-container {\n      display: none;\n      flex-direction: column-reverse;\n      position: static;\n    }\n    .menu-panel {\n      height: auto;\n    }\n    &.active {\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      position: fixed;\n      height: 100vh;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      z-index: var(--menu-zindex);\n      .menu-trigger {\n        position: relative;\n        z-index: calc(var(--menu-zindex) + 1);\n        @include icon {\n          transform: rotate(180deg);\n        }\n      }\n      .menu-container {\n        display: flex;\n      }\n    }\n  }\n\n  // Tablet\n  @include media-breakpoint-up(sm) {\n    &.auxiliary {\n      .menu-trigger {\n        display: none;\n      }\n      .menu-scrim {\n        position: static;\n      }\n      .menu-container {\n        display: block;\n      }\n    }\n  }\n}\n\n@mixin menu-states {\n  // Aplicáveis para item texto e link\n  .menu-item {\n    // Escondido\n    &[hidden] {\n      display: none;\n    }\n\n    // Desativado\n    &:disabled {\n      @include disabled;\n    }\n  }\n\n  // Aplicável somente para links\n  a.menu-item {\n    &:not(:disabled) {\n      // Ativo\n      &.active {\n        --interactive-rgb: var(--rgb-secondary-01);\n        --menu-item-background: var(--active);\n        --menu-item-color: var(--color-secondary-01);\n      }\n\n      // Hover\n      @include hover;\n    }\n  }\n}\n\n.#{$prefix}menu {\n  @include menu;\n}\n","@mixin icon-size($value) {\n  @include icon {\n    --icon-size: #{$value};\n  }\n}\n\n@mixin icon {\n  .svg-inline--fa,\n  .fa,\n  .fab,\n  .fad,\n  .fal,\n  .far,\n  .fas {\n    @content;\n  }\n}\n","// Desabilitado\n@mixin disabled {\n  cursor: not-allowed;\n  opacity: var(--disabled);\n\n  * {\n    pointer-events: none;\n  }\n}\n\n// Hover\n@mixin hover {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(\n        rgba(var(--interactive-rgb), var(--hover)),\n        rgba(var(--interactive-rgb), var(--hover))\n      );\n    }\n    &:active {\n      background-image: linear-gradient(\n        rgba(var(--interactive-rgb), var(--pressed)),\n        rgba(var(--interactive-rgb), var(--pressed))\n      );\n    }\n  }\n}\n\n// Focus\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus-color);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n@mixin focus-shadow {\n  border-color: var(--focus-color);\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus-color);\n  outline: none;\n}\n\n// Ativo\n@mixin active {\n  background: var(--active);\n  color: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n  --text-color: var(--color-secondary-01);\n  --interactive: var(--color-primary-pastel-01);\n  --interactive-rgb: var(--rgb-primary-pastel-01);\n  --visited: var(--color-secondary-04);\n  --hover: var(--surface-opacity-sm, 0.3);\n  --pressed: var(--surface-opacity-lg, 0.65);\n  --focus-color: var(--color-support-10);\n  --active: var(--color-secondary-01);\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"sourceRoot":""}